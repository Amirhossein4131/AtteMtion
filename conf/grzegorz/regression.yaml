run:
  hydra:
    dir: ${oc.env:PROJECT_ROOT}/hydra/regression/${now:%Y-%m-%d}/${now:%H-%M-%S}

trainer:
  max_epochs: 5000

model:
  _target_: pl_modules.modules.direct_prediction.GraphFeaturePredictor
  pool: ${load:torch_geometric.nn.global_mean_pool}
  gnn:
    _target_: pl_modules.nn.graph_models.GCNWrap
    in_channels: 58
    out_channels: 64
    hidden_channels: 64
    num_layers: 3
    #heads: 4        # comment for GCN
  readout:
    _target_: torch.nn.Linear
    in_features: 64
    out_features: 1
  optimizer_cfg:
    lr: 0.001
    step_size: 1000
    gamma: 0.5

datamodule:
  _target_: pl_modules.data.datamodule.MolybdenumDataModule
  modification: breakdown       # in-context OR breakdown
  batch_size: 64
  db_name: Cu_strain
  datapoint_limit: 1000
  label_scaler:
  #  _target_: sklearn.preprocessing.StandardScaler

#datamodule:
#  _target_: pl_modules.data.dime_data.DimeNetDataModule
#  train_csv: ${oc.env:PROJECT_ROOT}/data/strain/dataset.csv
#  test_csv: ${oc.env:PROJECT_ROOT}/data/strain/dataset.csv
#  elements: ${oc.env:PROJECT_ROOT}/data/strain/elements.json
#  separate_test: True
#  batch_size: 16
#  label_scaler:
#    _target_: sklearn.preprocessing.StandardScaler